// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/chris-han-nih/ent-demo/ent/product"
	"github.com/chris-han-nih/ent-demo/ent/schema"
	"github.com/chris-han-nih/ent-demo/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescStock is the schema descriptor for stock field.
	productDescStock := productFields[2].Descriptor()
	// product.DefaultStock holds the default value on creation for the stock field.
	product.DefaultStock = productDescStock.Default.(int)
	// product.StockValidator is a validator for the "stock" field. It is called by the builders before save.
	product.StockValidator = productDescStock.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[0].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[2].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
